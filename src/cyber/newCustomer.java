package cyber;

import dbConnect.dbconnect;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

class dropdown{

    String value;
    String name;
    
    public dropdown(String id, String name){
        
        this.value=id;
        this.name=name;
    }

    public String toString(){
        
        return this.name=name;
    }
}
public class newCustomer extends javax.swing.JPanel {

    private javax.swing.DefaultComboBoxModel cbm;
    Connection con=null;
    Object time;
    
    
    public newCustomer() {
        initComponents();
        con=dbconnect.getDBConnection();
        setValue();
        CurrentDate();
    }
    
    public void CurrentDate(){
            
            Thread clock=new Thread(){
            public void run(){
            for(;;){
            
                try {
                    Calendar cal=new GregorianCalendar();
                    int month =cal.get(Calendar.MONTH);
                    int year =cal.get(Calendar.YEAR);
                    int day =cal.get(Calendar.DAY_OF_MONTH);
                    jLabel5.setText(year+"::"+(month+1)+"::"+day);
                    
                    int second =cal.get(Calendar.SECOND);                
                    int minute =cal.get(Calendar.MINUTE);
                    int hour =cal.get(Calendar.HOUR);
                    jLabel5.setText(hour+"::"+(minute+1)+"::"+second);
                    
                    
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(newCustomer.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
            }
            }; 
            clock.start();
}
    
    public void setValue(){
        int noofrows=0;
        try{
        
            Statement st=con.createStatement();
            String sql="select * from tbl_cabin";
            ResultSet rs=st.executeQuery(sql);
            rs.last();
            noofrows=rs.getRow();
          //  System.out.println("helloooo");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Data not selected!!!");
        }
        
        dropdown[] cabinlist=new dropdown[noofrows];
        int a=0;
        try{
            Statement st1=con.createStatement();
            String sql1="select * from tbl_cabin";
            ResultSet rs1=st1.executeQuery(sql1);
            while(rs1.next()){
                   if(rs1.getString(3).equals("Free")){
                cabinlist[a]=new dropdown(rs1.getString(1),rs1.getString(2));
                jComboBox1.addItem(cabinlist[a]);
                a++;
            //    System.out.println("HIIII");
                   }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Cabin not listed");
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Customer", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel3.setText("Cabin No");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Cabin" }));

        jLabel4.setText("Entry Time");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Member", "Customer" }));

        jLabel2.setText("User Type");

        jLabel6.setText("Name/Id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBox1, 0, 135, Short.MAX_VALUE)
                        .addComponent(jTextField1)
                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String name=null;
        int m_id=0;
        int ci_id=0;
        dropdown c_id=(dropdown) jComboBox1.getSelectedItem();
        String end_time="00:00:00";

        Object usertype=jComboBox2.getSelectedItem();
        
        
        if(c_id.value!=""){
        
        
        Calendar cal = Calendar.getInstance();
    	cal.getTime();
    	SimpleDateFormat osdf1 = new SimpleDateFormat("HH:mm:ss");
    	String times=osdf1.format(cal.getTime());
        
        
        if(usertype=="Member"){
            m_id = Integer.parseInt(jTextField1.getText());
            //System.out.println(id);
           String sql3="insert into tbl_customer(a_id,c_id,start_time,end_time,date) values('"+m_id+"','"+c_id.value+"','"+times+"','"+end_time+"',now())";

            try{
                Statement a3=con.createStatement();
               // String sql2="INSERT INTO tbl_customer(a_id,c_id,ci_id,start_time,end_time)VALUES('"+null+"','"+c_id.value+"','"+cid+"','"+null+"','"+null+"')";
                a3.executeUpdate(sql3);
                             
            }catch(Exception e){
                System.out.println("Data not inserted");
                                System.out.println(sql3);

            }
            
            
            
        }else{
            
            name=jTextField1.getText();
            try{
                Statement a1=con.createStatement();
                String sql="INSERT INTO tbl_cust_info(name)VALUES('"+name+"')";
                a1.executeUpdate(sql,Statement.RETURN_GENERATED_KEYS );
                ResultSet b1 = a1.getGeneratedKeys();
                if(b1.next()){
                       ci_id = b1.getInt(1);
                       System.out.println(ci_id);
                }                
            }catch(Exception e){
                
            }
            try{
                Statement a2=con.createStatement();
                String sql2="insert into tbl_customer(c_id,ci_id,start_time,end_time) values('"+c_id.value+"','"+ci_id+"','"+times+"','"+end_time+"')";
               // String sql2="INSERT INTO tbl_customer(a_id,c_id,ci_id,start_time,end_time)VALUES('"+null+"','"+c_id.value+"','"+cid+"','"+null+"','"+null+"')";
                a2.executeUpdate(sql2);
                             
            }catch(Exception e){
                System.out.println("Data not inserted");
            }
            
        }
        String sql4="update tbl_cabin set status='Occupied' where c_id="+c_id.value;
        try{
            Statement st4=con.createStatement();
            st4.execute(sql4);
        }catch(Exception e){
            System.out.println("Data not updated");
        }
        userFrame.addContentPanel(new newCustomer());
        
        }else{
            JOptionPane.showMessageDialog(null, "Please select a cabin");
        }
        
       // System.out.println(id);
       // System.out.println(name);
        //String time=jLabel5.getText();
        
        //String time=sdf.format(cal.getTime());
       // System.out.println(sdf.format(cal.getTime()));
        
        
     
       
       
       /* int cu_id=0;
        //System.out.println("hi");
        try{
        
            Statement st=con.createStatement();
            String sql="select * from tbl_member";
            ResultSet rs=st.executeQuery(sql);
            
            while(rs.next()){
                if(name.equals(rs.getString(2))){
                   Statement st2=con.createStatement();
                   String sql2="insert into tbl_customer(m_id,c_id,start_time) values('"+Integer.parseInt(rs.getString(1))+"','"+c_id.value+"',now())";
                   st.execute(sql2);
                   System.out.println(sql2);
                }
            }
                Statement st3=con.createStatement();
                String sq13="insert into tbl_cust_info (name) values('"+name+"')";
                st3.execute(sq13);
                
                Statement st4=con.createStatement();
                String sql4="select * from tbl_cust_info";
                ResultSet rs4=st4.executeQuery(sql4);
                while(rs4.next()){
                    if(name.equals(rs4.getString(2))){
                    Statement st5=con.createStatement();
                    String sql5="insert into tbl_customer(ci_id,c_id) values('"+Integer.parseInt(rs4.getString(1))+"','"+c_id.value+"')";
                    st5.execute(sql5);
                    }
                }
                
                Statement st6=con.createStatement();
                String sql6="update tbl_cabin set status='Occupied' where c_id="+c_id.value;
                st6.execute(sql6);
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(null, e);
        }*/
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
